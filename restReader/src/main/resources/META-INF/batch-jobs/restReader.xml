<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright (c) 2016 Red Hat, Inc. and/or its affiliates.

 This program and the accompanying materials are made
 available under the terms of the Eclipse Public License 2.0
 which is available at https://www.eclipse.org/legal/epl-2.0/

 SPDX-License-Identifier: EPL-2.0
-->

<job id="restReader" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/jobXML_1_0.xsd"
     version="1.0">
    <properties>
        <property name="testName" value="#{jobParameters['testName']}"/>
    </properties>

    <step id="restReader.step1">
        <listeners>
            <listener ref="stepListener1"/>
        </listeners>
        <chunk>
            <reader ref="restItemReader">
                <properties>
                    <property name="restUrl" value="#{jobParameters['restUrl']}"/>

                    <!-- starts from item 3 for the initial reading, skipping the first 3 elements (0, 1, 2) -->
                    <!-- if offset not set, will start reading from the beginning -->
                    <property name="offset" value="3"/>

                    <!-- configure each REST call to return a maximum 20 items -->
                    <property name="limit" value="20"/>

                    <!-- type of each element in REST response entity -->
                    <property name="beanType" value="org.jberet.samples.wildfly.common.Movie"/>
                </properties>
            </reader>
            <writer ref="csvItemWriter">
                <properties>
                    <property name="resource" value="#{systemProperties['java.io.tmpdir']}/restReader.out"/>
                    <property name="beanType" value="org.jberet.samples.wildfly.common.Movie"/>
                    <property name="writeMode" value="overwrite"/>
                    <property name="header" value="rank,tit,grs,opn"/>
                </properties>
            </writer>
        </chunk>
    </step>
</job>
